(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{111:function(e,t,r){"use strict";r.d(t,"a",(function(){return m})),r.d(t,"b",(function(){return f}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=a.a.createContext({}),s=function(e){var t=a.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},m=function(e){var t=s(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(r),b=n,f=m["".concat(i,".").concat(b)]||m[b]||u[b]||o;return r?a.a.createElement(f,c(c({ref:t},p),{},{components:r})):a.a.createElement(f,c({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=b;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var p=2;p<o;p++)i[p]=r[p];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},58:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return c})),r.d(t,"toc",(function(){return l})),r.d(t,"default",(function(){return s}));var n=r(3),a=r(7),o=(r(0),r(111)),i={},c={unversionedId:"amplify-util-mock/_shared/tab-api",id:"amplify-util-mock/_shared/tab-api",isDocsHomePage:!1,title:"tab-api",description:"`bash {2}",source:"@site/docs/amplify-util-mock/_shared/tab-api.md",slug:"/amplify-util-mock/_shared/tab-api",permalink:"/amplify-cli-monorepo-tour/docs/amplify-util-mock/_shared/tab-api",editUrl:"https://github.com/MLH-Fellowship/amplify-cli-monorepo-tour/edit/main/docs/amplify-util-mock/_shared/tab-api.md",version:"current"},l=[],p={toc:l};function s(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash",metastring:"{2}","{2}":!0},"# amplify-util-mock/src/api\n\n\u251c\u2500\u2500 api.ts\n\u251c\u2500\u2500 index.ts\n\u251c\u2500\u2500 lambda-arn-to-config.ts\n\u251c\u2500\u2500 resolver-overrides.ts\n\u2514\u2500\u2500 run-graphql-transformer.ts\n")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Files:")),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("inlineCode",{parentName:"li"},"api.ts")," : It exposes a class called ",Object(o.b)("strong",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"strong"},"APITest"))," responsible for starting the Local AppSync simulator, as well as starting the GraphQL transformer. It also starts a local DynamoDB server which uses SQLite."),Object(o.b)("li",{parentName:"ol"},Object(o.b)("inlineCode",{parentName:"li"},"index.ts")," : It exposes the global ",Object(o.b)("inlineCode",{parentName:"li"},"start()")," function which is called when ",Object(o.b)("inlineCode",{parentName:"li"},"amplify mock api")," is executed."),Object(o.b)("li",{parentName:"ol"},Object(o.b)("inlineCode",{parentName:"li"},"lambda-arn-to-config.ts")," : Attempts to match an arn object against the array of lambdas configured in the project."),Object(o.b)("li",{parentName:"ol"},Object(o.b)("inlineCode",{parentName:"li"},"run-graphql-transformer.ts")," : Executes the GraphQL transformer from the ",Object(o.b)("strong",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"strong"},"$TSContext"))," object.")))}s.isMDXComponent=!0}}]);