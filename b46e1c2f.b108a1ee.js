(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{114:function(e,n,t){"use strict";t.d(n,"a",(function(){return m})),t.d(n,"b",(function(){return y}));var r=t(0),i=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=i.a.createContext({}),u=function(e){var n=i.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},m=function(e){var n=u(e.components);return i.a.createElement(p.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},f=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=u(t),f=r,y=m["".concat(a,".").concat(f)]||m[f]||s[f]||o;return t?i.a.createElement(y,l(l({ref:n},p),{},{components:t})):i.a.createElement(y,l({ref:n},p))}));function y(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=f;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var p=2;p<o;p++)a[p]=t[p];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,t)}f.displayName="MDXCreateElement"},97:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return l})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return u}));var r=t(3),i=t(7),o=(t(0),t(114)),a={id:"index",title:"Amplify CLI Package",sidebar_label:"Amplify CLI Package",slug:"/amplify-cli/"},l={unversionedId:"amplify-cli/index",id:"amplify-cli/index",isDocsHomePage:!1,title:"Amplify CLI Package",description:"Amplify CLI is a pluggable platform. Plugins allow us to add functionality to the existing Amplify CLI.",source:"@site/docs/amplify-cli/package-amplify-cli.md",slug:"/amplify-cli/",permalink:"/amplify-cli-monorepo-tour/docs/amplify-cli/",editUrl:"https://github.com/MLH-Fellowship/amplify-cli-monorepo-tour/edit/main/docs/amplify-cli/package-amplify-cli.md",version:"current",sidebar_label:"Amplify CLI Package",sidebar:"docs",previous:{title:"Amplify Mock Commands",permalink:"/amplify-cli-monorepo-tour/docs/amplify-util-mock/commands"},next:{title:"Amplify Multienv",permalink:"/amplify-cli-monorepo-tour/docs/amplify-cli/amplify-env"}},c=[],p={toc:c};function u(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Amplify CLI is a pluggable platform. Plugins allow us to add functionality to the existing Amplify CLI."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"\u251c\u2500\u2500 amplify-plugin.json\n\u251c\u2500\u2500 bin\n\u251c\u2500\u2500 CHANGELOG.md\n\u251c\u2500\u2500 lib\n\u251c\u2500\u2500 __mocks__\n\u251c\u2500\u2500 node_modules\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 package-lock.json\n\u251c\u2500\u2500 readme.md\n\u251c\u2500\u2500 sample-headless-scripts\n\u251c\u2500\u2500 scripts\n\u251c\u2500\u2500 src\n\u251c\u2500\u2500 templates\n\u251c\u2500\u2500 tests\n\u251c\u2500\u2500 tsconfig.json\n\u2514\u2500\u2500 tsconfig.tsbuildinfo\n")))}u.isMDXComponent=!0}}]);