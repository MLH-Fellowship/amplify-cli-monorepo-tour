(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{111:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return u}));var i=n(0),r=n.n(i);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),b=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=b(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=r.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=b(n),p=i,u=m["".concat(o,".").concat(p)]||m[p]||d[p]||a;return n?r.a.createElement(u,l(l({ref:t},s),{},{components:n})):r.a.createElement(u,l({ref:t},s))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=n[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},91:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return b}));var i=n(3),r=n(7),a=(n(0),n(111)),o={},l={unversionedId:"amplify-env",id:"amplify-env",isDocsHomePage:!1,title:"amplify-env",description:"Amplify CLI supports creating multiple backend environments. Each Amplify backend environment is a container for the categories added to your project. You can find more information about multi-environment feature here.",source:"@site/docs/amplify-env.md",slug:"/amplify-env",permalink:"/amplify-cli-monorepo-tour/docs/amplify-env",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/amplify-env.md",version:"current"},c=[{value:"<code>add.ts</code>",id:"addts",children:[]},{value:"<code>checkout.ts</code>",id:"checkoutts",children:[]},{value:"<code>get.ts</code>",id:"getts",children:[]},{value:"<code>import.ts</code>",id:"importts",children:[]},{value:"<code>list.ts</code>",id:"listts",children:[]},{value:"<code>pull.ts</code>",id:"pullts",children:[]},{value:"<code>remove.ts</code>",id:"removets",children:[]}],s={toc:c};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(i.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Amplify CLI supports creating multiple backend environments. Each Amplify backend environment is a container for the categories added to your project. You can find more information about multi-environment feature ",Object(a.b)("a",{parentName:"p",href:"https://docs.amplify.aws/cli/teams/overview"},"here"),"."),Object(a.b)("p",null,"The code for multi-environment resides in the ",Object(a.b)("inlineCode",{parentName:"p"},"packages/amplify-cli/src/commands/env")," directory. It has the following files for each command - "),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"\u251c\u2500\u2500 add.ts\n\u251c\u2500\u2500 checkout.ts\n\u251c\u2500\u2500 get.ts\n\u251c\u2500\u2500 import.ts\n\u251c\u2500\u2500 list.ts\n\u251c\u2500\u2500 pull.ts\n\u2514\u2500\u2500 remove.ts\n")),Object(a.b)("p",null,"The code in these files mostly uses functions defined in the ",Object(a.b)("inlineCode",{parentName:"p"},"context")," object. Following is the overview of what each file is responsible for and how it works."),Object(a.b)("h3",{id:"addts"},Object(a.b)("inlineCode",{parentName:"h3"},"add.ts")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Used for ",Object(a.b)("inlineCode",{parentName:"li"},"amplify env add"),", which is essentially ",Object(a.b)("inlineCode",{parentName:"li"},"amplify init"),". So, this file just calls the ",Object(a.b)("inlineCode",{parentName:"li"},"init")," function.")),Object(a.b)("h3",{id:"checkoutts"},Object(a.b)("inlineCode",{parentName:"h3"},"checkout.ts")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Used for ",Object(a.b)("inlineCode",{parentName:"li"},"amplify env checkout <envname>"),"."),Object(a.b)("li",{parentName:"ul"},"It first checks the input to make sure a valid environment name has been passed. The ",Object(a.b)("inlineCode",{parentName:"li"},"context")," object is used to get the list of all available environment (",Object(a.b)("inlineCode",{parentName:"li"},"context.amplify.getEnvDetails()"),"). "),Object(a.b)("li",{parentName:"ul"},"Then, it uses the ",Object(a.b)("inlineCode",{parentName:"li"},"stateManager")," from ",Object(a.b)("inlineCode",{parentName:"li"},"amplify-cli-core")," to set the current environment to the environment name provided."),Object(a.b)("li",{parentName:"ul"},"Once that is done, it sets up the ",Object(a.b)("inlineCode",{parentName:"li"},"context")," object to reflect the new environment."),Object(a.b)("li",{parentName:"ul"},"Finally, it initializes each ",Object(a.b)("inlineCode",{parentName:"li"},"providerModule")," with the settings for new environment.")),Object(a.b)("h3",{id:"getts"},Object(a.b)("inlineCode",{parentName:"h3"},"get.ts")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Used for ",Object(a.b)("inlineCode",{parentName:"li"},"amplify env get <envname>"),", through which you can list all details for ",Object(a.b)("inlineCode",{parentName:"li"},"<envname>")," environment. Details include the AWS Region, IAM roles, S3 bucket and stack information. "),Object(a.b)("li",{parentName:"ul"},"It gets a list of environments using ",Object(a.b)("inlineCode",{parentName:"li"},"getEnvDetails()")," and performs a search for the input ",Object(a.b)("inlineCode",{parentName:"li"},"<envname>"),". If found, it uses the ",Object(a.b)("inlineCode",{parentName:"li"},"printEnvInfo")," function found in ",Object(a.b)("inlineCode",{parentName:"li"},"packages/amplify-cli/src/commands/helpers/envUtils.ts"),".")),Object(a.b)("h3",{id:"importts"},Object(a.b)("inlineCode",{parentName:"h3"},"import.ts")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Used for ",Object(a.b)("inlineCode",{parentName:"li"},"amplify env import <envname>"),", through which you can import an existing environment from the cloud. "),Object(a.b)("li",{parentName:"ul"},"It parses the input command, and checks if the config provided by the environment is valid. "),Object(a.b)("li",{parentName:"ul"},"Then, it uses the ",Object(a.b)("inlineCode",{parentName:"li"},"getLocalAWSInfo")," function defined in ",Object(a.b)("inlineCode",{parentName:"li"},"stateManager")," to actually fetch the specified environment. "),Object(a.b)("li",{parentName:"ul"},"Finally, it adds the fetched environment to the current context.")),Object(a.b)("h3",{id:"listts"},Object(a.b)("inlineCode",{parentName:"h3"},"list.ts")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Used for ",Object(a.b)("inlineCode",{parentName:"li"},"amplify env list"),", through which you list all existing environments currently available. "),Object(a.b)("li",{parentName:"ul"},"The ",Object(a.b)("inlineCode",{parentName:"li"},"getEnvDetails")," function from current ",Object(a.b)("inlineCode",{parentName:"li"},"context")," object is used to get the list of all available environment (",Object(a.b)("inlineCode",{parentName:"li"},"context.amplify.getEnvDetails()"),"). "),Object(a.b)("li",{parentName:"ul"},"After that, it formats and prints the data to the console.")),Object(a.b)("h3",{id:"pullts"},Object(a.b)("inlineCode",{parentName:"h3"},"pull.ts")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Used for ",Object(a.b)("inlineCode",{parentName:"li"},"amplify env pull <envname>"),", through which you can pull the current environment from the cloud. If the ",Object(a.b)("inlineCode",{parentName:"li"},"--restore")," flag is specified, it will overwrite any local changes. "),Object(a.b)("li",{parentName:"ul"},"The inner workings of this are similar to the ",Object(a.b)("inlineCode",{parentName:"li"},"import")," command. It uses the ",Object(a.b)("inlineCode",{parentName:"li"},"context")," object's ",Object(a.b)("inlineCode",{parentName:"li"},"constructExeInfo")," function to fetch the latest changes to the current environment from the cloud, and then re-initializes the current environment based on the fetched data.")),Object(a.b)("h3",{id:"removets"},Object(a.b)("inlineCode",{parentName:"h3"},"remove.ts")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Used for ",Object(a.b)("inlineCode",{parentName:"li"},"amplify env remove <envname>"),", through which you can remove both the local and the cloud environments, including all provisioned services and resources. "),Object(a.b)("li",{parentName:"ul"},"First, it checks whether the envname provided is a valid one. Next, it asks for confirmation from the user through the ",Object(a.b)("inlineCode",{parentName:"li"},"getConfirmation()")," function. "),Object(a.b)("li",{parentName:"ul"},"Finally, it uses the ",Object(a.b)("inlineCode",{parentName:"li"},"removeFromCloud()")," function from ",Object(a.b)("inlineCode",{parentName:"li"},"context")," to delete resources through CloudFormation and uses ",Object(a.b)("inlineCode",{parentName:"li"},"stateManager.setLocalAWSInfo")," to remove the environment locally.")))}b.isMDXComponent=!0}}]);